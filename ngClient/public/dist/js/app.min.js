var myApp=angular.module("WIMF",["ngRoute","ngResource"]);myApp.constant("APILINK","http://localhost:3000"),myApp.config(function($routeProvider,$httpProvider){$httpProvider.interceptors.push("TokenInterceptor"),$routeProvider.when("/login",{templateUrl:"partials/login.html",controller:"LoginCtrl",access:{requiredLogin:!1}}).when("/register",{templateUrl:"partials/register.html",controller:"RegisterCtrl",access:{requiredLogin:!1}}).when("/monfrigo",{templateUrl:"partials/frigo/frigo.html",controller:"FrigoCtrl",access:{requiredLogin:!0}}).when("/mescourses",{templateUrl:"partials/courses/courses.html",controller:"RegisterCtrl",access:{requiredLogin:!0}}).when("/mesrecettes",{templateUrl:"partials/recettes/recettes.html",controller:"RegisterCtrl",access:{requiredLogin:!0}}).when("/",{templateUrl:"partials/home/home.html",controller:"HomeCtrl",access:{requiredLogin:!0}}).otherwise({redirectTo:"/login"})}),myApp.run(function($rootScope,$window,$location,AuthenticationFactory){AuthenticationFactory.check(),$rootScope.$on("$routeChangeStart",function(event,nextRoute,currentRoute){nextRoute.access&&nextRoute.access.requiredLogin&&!AuthenticationFactory.isLogged?$location.path("/login"):(AuthenticationFactory.user||(AuthenticationFactory.user=$window.sessionStorage.user),AuthenticationFactory.userRole||(AuthenticationFactory.userRole=$window.sessionStorage.userRole))}),$rootScope.$on("$routeChangeSuccess",function(event,nextRoute,currentRoute){$rootScope.showMenu=AuthenticationFactory.isLogged,$rootScope.role=AuthenticationFactory.userRole,AuthenticationFactory.isLogged===!0&&"/login"==$location.path()&&$location.path("/")})}),myApp.controller("MainCtrl",["$scope","$http","$location","UserAuthFactory",function($scope,$http,$location,UserAuthFactory){$scope.navstate=!1,$scope.logout=function(){UserAuthFactory.logout()},$scope.go=function(path){componentHandler.upgradeDom(),$location.path(path)},$scope.toggleNav=function(){$scope.navstate=!$scope.navstate},$scope.closeNav=function(){$scope.navstate=!1},$scope.isOpenedNav=function(){return $scope.navstate}}]);var observer=new MutationObserver(function(mutations){for(var upgrade=!1,i=0;i<mutations.length;i++)if(mutations[i].addedNodes.length>0){upgrade=!0;break}upgrade&&window.componentHandler.upgradeDom()});observer.observe(document,{childList:!0,subtree:!0}),myApp.controller("LoginCtrl",["$scope","$window","$location","UserAuthFactory","AuthenticationFactory",function($scope,$window,$location,UserAuthFactory,AuthenticationFactory){$scope.login=function(){var username=$scope.username,password=$scope.password;void 0!==username&&void 0!==password?UserAuthFactory.login(username,password).success(function(data){AuthenticationFactory.isLogged=!0,$window.sessionStorage.token=data.token,$location.path("/home")}).error(function(response){401==response.status?alert("Mot de passe incorrect."):404==response.status?alert("Nom d'utilisateur incorrect."):alert("Une erreur est survenue.")}):alert("Merci de renseignez les champs.")}}]),myApp.controller("RegisterCtrl",["$scope","$window","$location","UserAuthFactory","AuthenticationFactory",function($scope,$window,$location,UserAuthFactory,AuthenticationFactory){$scope.register=function(){$scope.password==$scope.password2?UserAuthFactory.register($scope.username,$scope.password).success(function(){alert("Votre compte a bien été créé, vous allez être redirigé !")}):alert("Les deux mots de passes ne sont pas identiques !")}}]),myApp.factory("AuthenticationFactory",function($window){var auth={isLogged:!1,check:function(){$window.sessionStorage.token?this.isLogged=!0:(this.isLogged=!1,delete this.user)}};return auth}),myApp.factory("UserAuthFactory",function($window,APILINK,$location,$http,AuthenticationFactory){return{login:function(username,password){return $http.post(APILINK+"/login",{username:username,password:password})},logout:function(){AuthenticationFactory.isLogged&&(AuthenticationFactory.isLogged=!1,delete AuthenticationFactory.user,delete AuthenticationFactory.userid,delete AuthenticationFactory.userRole,delete $window.sessionStorage.token,delete $window.sessionStorage.user,delete $window.sessionStorage.userid,delete $window.sessionStorage.userRole,$location.path("/login"))},register:function(username,password){return $http.post(APILINK+"/register",{username:username,password:password})}}}),myApp.factory("TokenInterceptor",function($q,$window){return{request:function(config){return config.headers=config.headers||{},$window.sessionStorage.token&&(config.headers["X-Access-Token"]=$window.sessionStorage.token,config.headers["Content-Type"]="application/json"),config||$q.when(config)},response:function(response){return response||$q.when(response)}}}),myApp.directive("ngConfirmClick",[function(){return{link:function(scope,element,attr){var msg=attr.ngConfirmClick||"Êtes vous sûrs ?",clickAction=attr.confirmedClick;element.bind("click",function(event){window.confirm(msg)&&scope.$eval(clickAction)})}}}]),myApp.factory("CategoriesFactory",function($http,APILINK){var _CategoriesFactory={};return _CategoriesFactory.getCategories=function(){var promise=$http.get(APILINK+"/api/v1/categories").then(function(response){return response.data},function(error){console.log(error)});return promise},_CategoriesFactory.modifyCategory=function(id,categoryName){var promise=$http.put(APILINK+"/api/v1/category/"+id,{CategoryName:categoryName}).then(function(response){return response.data},function(error){console.log(error)});return promise},_CategoriesFactory.deleteCategory=function(id){var promise=$http["delete"](APILINK+"/api/v1/category/"+id).then(function(response){return response.data},function(error){console.log(error)});return promise},_CategoriesFactory.addCategory=function(categoryName){var promise=$http.post(APILINK+"/api/v1/categories",{categoryName:categoryName}).then(function(response){return response.data},function(error){console.log(error)});return promise},_CategoriesFactory}),myApp.factory("IngredientsFactory",function(APILINK,$http){var _IngredientsFactory={};return _IngredientsFactory.addIngredient=function(recipe_id,idProduct,quantity){var promise=$http.post(APILINK+"/api/v1/recipe/"+recipe_id,{idProduct:idProduct,quantity:quantity}).then(function(response){return response.data},function(error){console.log(error)});return promise},_IngredientsFactory.modifyIngredient=function(recipe_id,product_id,quantity){var promise=$http.put(APILINK+"/api/v1/recipe/"+recipe_id+"/product/"+product_id,{quantity:quantity}).then(function(response){return response.data},function(error){console.log(error)});return promise},_IngredientsFactory.deleteIngredient=function(recipe_id,product_id){var promise=$http["delete"](APILINK+"/api/v1/recipe/"+recipe_id+"/product/"+product_id).then(function(response){return response.data},function(error){console.log(error)});return promise},_IngredientsFactory}),myApp.factory("ItemsFactory",function(APILINK,$http){var _ItemsFactory={};return _ItemsFactory.getItems=function(){var promise=$http.get(APILINK+"/api/v1/items").then(function(response){return response.data},function(error){console.log(error)});return promise},_ItemsFactory.getItem=function(id){var promise=$http.get(APILINK+"/api/v1/item/"+id).then(function(response){return response.data},function(error){console.log(error)});return promise},_ItemsFactory.modifyItem=function(item){var promise=$http.put(APILINK+"/api/v1/item/"+item.idItem,{itemName:item.itemName,quantity:item.quantity}).then(function(response){return response.data},function(error){console.log(error)});return promise},_ItemsFactory.deleteItem=function(item){var promise=$http["delete"](APILINK+"/api/v1/item/"+item.idItem).then(function(response){return response.data},function(error){console.log(error)});return promise},_ItemsFactory.addItem=function(idProduct,itemName,quantity){var promise=$http.post(APILINK+"/api/v1/items",{idProduct:idProduct,itemName:itemName,quantity:quantity}).then(function(response){return response.data},function(error){console.log(error)});return promise},_ItemsFactory}),myApp.factory("ProductsFactory",function(APILINK,$http){var _ProductsFactory={};return _ProductsFactory.getProducts=function(){var promise=$http.get(APILINK+"/api/v1/products").then(function(response){return response.data.products=replaceProductsImg(response.data.products),response.data},function(error){console.log(error)});return promise},_ProductsFactory.getProduct=function(id){var promise=$http.get(APILINK+"/api/v1/product/"+id).then(function(response){return response.data},function(error){console.log(error)});return promise},_ProductsFactory.modifyProduct=function(product){console.log(product);var promise=$http.put(APILINK+"/api/v1/product/"+product.idProduct,{productName:product.productName,img:product.img,idCategory:product.idCategory}).then(function(response){return response.data},function(error){console.log(error)});return promise},_ProductsFactory.deleteProduct=function(product){var promise=$http["delete"](APILINK+"/api/v1/products/"+product.idProduct).then(function(response){return response.data},function(error){console.log(error)});return promise},_ProductsFactory.addProduct=function(productName,img,idCategory){var promise=$http.post(APILINK+"/api/v1/products",{productName:productName,img:img,idCategory:idCategory}).then(function(response){return response.data},function(error){console.log(error)});return promise},_ProductsFactory});var replaceProductsImg=function(products){for(i=0;i<products.length;i++)void 0===products[i].img&&(products[i].img="img/imageNotFound.jpg");return products};myApp.factory("RecipesFactory",function(APILINK,$http){var _RecipesFactory={};return _RecipesFactory.getRecipes=function(){var promise=$http.get(APILINK+"/api/v1/recipes").then(function(response){return response.data},function(error){console.log(error)});return promise},_RecipesFactory.modifyRecipe=function(id,RecipeName){var promise=$http.put(APILINK+"/api/v1/recipe/"+id,{recipeName:recipeName}).then(function(response){return response.data},function(error){console.log(error)});return promise},_RecipesFactory.deleteRecipe=function(id){var promise=$http["delete"](APILINK+"/api/v1/recipe/"+id).then(function(response){return response.data},function(error){console.log(error)});return promise},_RecipesFactory.addRecipe=function(recipeName){var promise=$http.post(APILINK+"/api/v1/recipes",{recipeName:recipeName}).then(function(response){return response.data},function(error){console.log(error)});return promise},_RecipesFactory}),myApp.controller("FrigoCtrl",["$scope","$location","ItemsFactory","ProductsFactory","Product",function($scope,$location,ItemsFactory,ProductsFactory,Product){$scope.products=[],$scope.getProducts=function(){var products=Product.query(function(){$scope.products=products.products})};var promise=Product.get({id:5},function(){promise.product.productName="ngResourceRocks",promise.product.$update(function(){console.log("done")})});$scope.addProductMenu=!1,$scope.leftMenu=!1,$scope.showFiltersMenu=!1,$scope.showSortingMenu=!1,$scope.addFormDisplayed=!1,$scope.getProducts(),$scope.toggleAddForm=function(){$scope.addFormDisplayed=!$scope.addFormDisplayed},$scope.selectProduct=function(product){product.modifying||(void 0!==product.selected?product.selected=!product.selected:product.selected=!0)},$scope.isSelected=function(product){return product.selected},$scope.toggleModifyProduct=function(product){void 0!==product.modifying?product.modifying=!product.modifying:product.modifying=!0},$scope.isModifying=function(product){return product.modifying},$scope.toggleAddMenu=function(){$scope.addItemMenu=!$scope.addItemMenu},$scope.toggleFiltersMenu=function(){$scope.showFiltersMenu=!$scope.showFiltersMenu},$scope.toggleSortingMenu=function(){$scope.showSortingMenu=!$scope.showSortingMenu},$scope.toggleLeftMenu=function(){$scope.leftMenu=!$scope.leftMenu},$scope.addProduct=function(){ProductsFactory.addProduct($scope.productName,$scope.img).then(function(){$scope.leftMenu=!1,$scope.addFormDisplayed=!1,$scope.getProducts()})},$scope.modifyProduct=function(product){ProductsFactory.modifyProduct(product).then(function(){$scope.getProducts(),product.modifying=!1,product.selected=!1})},$scope.deleteProduct=function(product){ProductsFactory.deleteProduct(product).then(function(){alert("Supprimé !"),$scope.getProducts()})}}]),myApp.controller("HomeCtrl",["$scope",function($scope){}]),myApp.factory("Product",function($resource,APILINK){return $resource(APILINK+"/api/v1/products/:id",{id:"@id"},{query:{method:"GET",transformResponse:function(data){return data.products},isArray:!1},update:{method:"PUT"}})}),myApp.factory("Item",function($resource,APILINK){return $resource(APILINK+"/api/v1/items/:id",{id:"@id"},{query:{method:"GET",isArray:!1}})}),myApp.factory("Category",function($resource,APILINK){return $resource(APILINK+"/api/v1/categories/:id",{id:"@id"},{query:{method:"GET",isArray:!1}})}),myApp.factory("Recipe",function($resource,APILINK){return $resource(APILINK+"/api/v1/recipes/:id",{id:"@id"},{query:{method:"GET",isArray:!1}})}),myApp.factory("Ingredient",function($resource,APILINK){return $resource(APILINK+"/api/v1/recipes/:recipe_id/products/:product_id",{recipe_id:"@recipe_id",product_id:"@product_id"},{query:{method:"GET",isArray:!1}})});